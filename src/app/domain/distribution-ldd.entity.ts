import {Column} from '../technical/orm/column.decorator';
import {SQLiteType} from '../technical/orm/sqlite-type';
import {Entity} from '../technical/orm/entity';

export enum TypeDistribution {
    DISTRIBUTION = 'DISTRIBUTION',
    NON_DISTRIBUTION = 'NON_DISTRIBUTION'
}

@Entity('element_ldd')
export class DistributionLddEntity {

    @Column({name: 'id', type: SQLiteType.INTEGER, comment: 'Id de la LDD', primary: true, autoGenerated: true})
    id: number;

    @Column({
        name: 'date_creation',
        type: SQLiteType.TEXT,
        comment: 'Date de la création au format YYYY-MM-DD HH:MM:SS'
    })
    dateCreation: string;

    @Column({
        name: 'date_distribution',
        type: SQLiteType.TEXT,
        comment: 'Date de distribution au format YYYY-MM-DD HH:MM:SS'
    })
    dateDistribution: string;

    @Column({name: 'ldd', type: SQLiteType.INTEGER, comment: 'Id de la LDD'})
    ldd: number;

    @Column({
        name: 'code_barre',
        type: SQLiteType.TEXT,
        length: 13,
        comment: 'Code à barre de l\'objet',
        notNull: true
    })
    codeBarre: string;

    @Column({name: 'statut', type: SQLiteType.TEXT, comment: 'Statut général de la distribution'})
    statut: string;

    @Column({name: 'synced', type: SQLiteType.TEXT, length: 1, comment: 'O/N si la synchronisation a été faite'})
    synced: string;

    @Column({
        name: 'path_signature',
        type: SQLiteType.TEXT,
        comment: 'Path local du device pour l\'image de la signature'
    })
    pathSignature: string;

    @Column({
        name: 'type_distribution',
        type: SQLiteType.TEXT,
        length: 25,
        comment: 'DISTRIBUTION ou NON_DISTRIBUTION'
    })
    typeDistribution: TypeDistribution;
}
